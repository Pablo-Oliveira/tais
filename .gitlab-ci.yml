image: python:3.6-slim

stages:
  - test style
  - validate format
  - test stories
  - build
  - deploy

variables:
  BOT_LATEST_IMAGE: $CI_REGISTRY_IMAGE/bot:latest
  WEB_LATEST_IMAGE: $CI_REGISTRY_IMAGE/web:latest

.set_ssh_config: &set_ssh_config
  before_script:
    - apt-get update -y
    - apt-get install sshpass -y

test style:
  stage: test style
  script:
    - pip -V
    - python -V
    - pip install -r dev.requirements.txt
    - flake8 --exclude venv

run dataset validator:
  stage: validate format
  image: registry.gitlab.com/lappis-unb/services/tais/bot
  script:
    - cd coach/
    - make run-validator

test stories:
  stage: test stories
  image: registry.gitlab.com/lappis-unb/services/tais/bot
  script:
    - cd bot/
    - make train > /dev/null 2>&1
    - make test-stories

build bot:
  stage: build
  image: docker
  services:
    - docker:dind
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker build -f docker/bot/bot.Dockerfile -t $BOT_LATEST_IMAGE .
    - docker push $BOT_LATEST_IMAGE
  only:
    - master

build web:
  stage: build
  image: docker
  services:
    - docker:dind
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY

    - docker build -f docker/web/web.Dockerfile -t $WEB_LATEST_IMAGE .
    - docker push $WEB_LATEST_IMAGE
  only:
    - master

deploy bot to homolog:
  stage: deploy
  <<: *set_ssh_config
  environment: homolog
  script:
    - ./scripts/deploy_bot.sh $TAIS_SERVER_PASSWORD $TAIS_SERVER_IP
  only:
    - master

deploy web to homolog:
  stage: deploy
  <<: *set_ssh_config
  environment: homolog
  script:
    - ./scripts/deploy_web.sh $TAIS_SERVER_PASSWORD $TAIS_SERVER_IP
  only:
    - master
