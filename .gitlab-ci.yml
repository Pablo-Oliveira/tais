image: python:3.6-slim

stages:
  - test style
  - validate format
#  - test stories
  - build
  - deploy

variables:
  BOT_LATEST_IMAGE: $CI_REGISTRY_IMAGE/bot:latest
  WEB_LATEST_IMAGE: $CI_REGISTRY_IMAGE/web:latest

.set_ssh_config: &set_ssh_config
  before_script:
    - apt-get update -y
    - apt-get install sshpass -y

.set_build: &set_build
  before_script:
    - apk update && apk add git
    - apk add --no-cache bash

test style:
  stage: test style
  script:
    - pip -V
    - python -V
    - pip install -r dev.requirements.txt
    - flake8 --exclude venv

run dataset validator:
  stage: validate format
  image: registry.gitlab.com/lappis-unb/services/tais/bot
  script:
    - cd bot/
    - make run-validator

#test stories:
#  stage: test stories
#  image: registry.gitlab.com/lappis-unb/services/tais/bot
#  script:
#    - cd bot/
#    - make e2e

build_bot:
  stage: build
  <<: *set_build
  image: docker
  services:
    - docker:dind
  script:
    - ./scripts/build_service.sh web $CI_COMMIT_REF_NAME $WEB_LATEST_IMAGE "$CI_JOB_TOKEN" $CI_REGISTRY docker/bot.Dockerfile
  only:
    - merge_requests

build_web:
  stage: build
  <<: *set_build
  image: docker
  services:
    - docker:dind
  script:
    - ./scripts/build_service.sh web $CI_COMMIT_REF_NAME $WEB_LATEST_IMAGE "$CI_JOB_TOKEN" $CI_REGISTRY docker/web.Dockerfile
  only:
    - merge_requests

deploy_bot_to_homolog:
  stage: deploy
  <<: *set_ssh_config
  environment: homolog
  script:
    - ./scripts/deploy_bot.sh $TAIS_SERVER_PASSWORD $TAIS_SERVER_IP bot $BOT_LATEST_IMAGE
  only:
    - master

deploy_web_to_homolog:
  stage: deploy
  <<: *set_ssh_config
  environment: homolog
  script:
    - ./scripts/deploy_web.sh $TAIS_SERVER_PASSWORD $TAIS_SERVER_IP web $WEB_LATEST_IMAGE
  only:
    - master
